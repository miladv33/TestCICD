name: Generate APK / AAB Debug And Release

on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set Up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      # Run Build Project
      - name: Build project
        run: ./gradlew build

      # Create APK Debug
      - name: Build apk debug project (APK)
        run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK)
        run: ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [module-name]:bundleRelease
      - name: Build app bundle release (AAB)
        run: ./gradlew app:bundleRelease

      # Upload Artifact Build
      # Noted For Output [module-name]/build/outputs/
      - name: Upload debug build APK
        uses: actions/upload-artifact@v2
        with:
          name: App bundle(s) and APK(s) generated
          path: app/build/outputs/
      
      - name: Upload APK to Release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/zip
      
      
